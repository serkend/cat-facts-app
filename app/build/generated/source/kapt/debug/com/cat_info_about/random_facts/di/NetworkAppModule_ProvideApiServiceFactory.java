// Generated by Dagger (https://dagger.dev).
package com.cat_info_about.random_facts.di;

import com.cat_info_about.random_facts.data.network.api.CatFactsApi;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import retrofit2.Retrofit;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NetworkAppModule_ProvideApiServiceFactory implements Factory<CatFactsApi> {
  private final Provider<Retrofit> retrofitProvider;

  public NetworkAppModule_ProvideApiServiceFactory(Provider<Retrofit> retrofitProvider) {
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public CatFactsApi get() {
    return provideApiService(retrofitProvider.get());
  }

  public static NetworkAppModule_ProvideApiServiceFactory create(
      Provider<Retrofit> retrofitProvider) {
    return new NetworkAppModule_ProvideApiServiceFactory(retrofitProvider);
  }

  public static CatFactsApi provideApiService(Retrofit retrofit) {
    return Preconditions.checkNotNullFromProvides(NetworkAppModule.INSTANCE.provideApiService(retrofit));
  }
}
