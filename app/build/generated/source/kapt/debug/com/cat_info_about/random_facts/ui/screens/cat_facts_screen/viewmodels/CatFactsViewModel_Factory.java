// Generated by Dagger (https://dagger.dev).
package com.cat_info_about.random_facts.ui.screens.cat_facts_screen.viewmodels;

import com.cat_info_about.random_facts.data.database.repository.CatFactsDatabaseRepository;
import com.cat_info_about.random_facts.data.network.mapper.Mapper;
import com.cat_info_about.random_facts.data.network.repository.CatFactsNetworkRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CatFactsViewModel_Factory implements Factory<CatFactsViewModel> {
  private final Provider<CatFactsNetworkRepository> networkRepositoryProvider;

  private final Provider<CatFactsDatabaseRepository> databaseRepositoryProvider;

  private final Provider<Mapper> mapperProvider;

  public CatFactsViewModel_Factory(Provider<CatFactsNetworkRepository> networkRepositoryProvider,
      Provider<CatFactsDatabaseRepository> databaseRepositoryProvider,
      Provider<Mapper> mapperProvider) {
    this.networkRepositoryProvider = networkRepositoryProvider;
    this.databaseRepositoryProvider = databaseRepositoryProvider;
    this.mapperProvider = mapperProvider;
  }

  @Override
  public CatFactsViewModel get() {
    return newInstance(networkRepositoryProvider.get(), databaseRepositoryProvider.get(), mapperProvider.get());
  }

  public static CatFactsViewModel_Factory create(
      Provider<CatFactsNetworkRepository> networkRepositoryProvider,
      Provider<CatFactsDatabaseRepository> databaseRepositoryProvider,
      Provider<Mapper> mapperProvider) {
    return new CatFactsViewModel_Factory(networkRepositoryProvider, databaseRepositoryProvider, mapperProvider);
  }

  public static CatFactsViewModel newInstance(CatFactsNetworkRepository networkRepository,
      CatFactsDatabaseRepository databaseRepository, Mapper mapper) {
    return new CatFactsViewModel(networkRepository, databaseRepository, mapper);
  }
}
