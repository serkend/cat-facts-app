// Generated by Dagger (https://dagger.dev).
package com.cat_info_about.random_facts.di;

import com.cat_info_about.random_facts.data.database.dao.CatFactsDao;
import com.cat_info_about.random_facts.data.database.instance.FactsDatabase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DatabaseModule_ProvideDaoFactory implements Factory<CatFactsDao> {
  private final Provider<FactsDatabase> databaseProvider;

  public DatabaseModule_ProvideDaoFactory(Provider<FactsDatabase> databaseProvider) {
    this.databaseProvider = databaseProvider;
  }

  @Override
  public CatFactsDao get() {
    return provideDao(databaseProvider.get());
  }

  public static DatabaseModule_ProvideDaoFactory create(Provider<FactsDatabase> databaseProvider) {
    return new DatabaseModule_ProvideDaoFactory(databaseProvider);
  }

  public static CatFactsDao provideDao(FactsDatabase database) {
    return Preconditions.checkNotNullFromProvides(DatabaseModule.INSTANCE.provideDao(database));
  }
}
